// scripts/create-demo.js
const fs = require('fs');
const path = require('path');

console.log('üèóÔ∏è Creating Clinic Demo Package...\n');

const demoFolderName = 'Clinic Management System - Demo';
const buildPath = path.join(__dirname, '..', 'build');
const demoPath = path.join(__dirname, '..', demoFolderName);

// ‡∏•‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏Å‡πà‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
if (fs.existsSync(demoPath)) {
    fs.rmSync(demoPath, { recursive: true, force: true });
    console.log('üóëÔ∏è Removed old demo folder');
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà
fs.mkdirSync(demoPath, { recursive: true });
console.log('üìÅ Created demo folder');

// ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å build
function copyFolderSync(from, to) {
    if (!fs.existsSync(to)) {
        fs.mkdirSync(to, { recursive: true });
    }

    fs.readdirSync(from).forEach(element => {
        const fromPath = path.join(from, element);
        const toPath = path.join(to, element);

        if (fs.lstatSync(fromPath).isFile()) {
            fs.copyFileSync(fromPath, toPath);
        } else {
            copyFolderSync(fromPath, toPath);
        }
    });
}

// ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå build
copyFolderSync(buildPath, demoPath);
console.log('üìã Copied build files');

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå start-demo.bat ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Windows
const startBatContent = `@echo off
color 0A
echo.
echo  üè• Clinic Management System - Demo
echo  ===================================
echo.
echo  üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö...
echo.

:: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Node.js
node --version >nul 2>&1
if %errorlevel% neq 0 (
    echo  ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Node.js ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
    echo  üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Node.js ‡∏à‡∏≤‡∏Å https://nodejs.org
    echo.
    echo  üìå ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏ò‡∏µ‡∏á‡πà‡∏≤‡∏¢:
    echo     1. ‡πÄ‡∏õ‡∏¥‡∏î Chrome Browser
    echo     2. ‡∏•‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå index.html ‡πÑ‡∏õ‡πÉ‡∏™‡πà‡πÉ‡∏ô Chrome
    echo     3. ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ Extension "Web Server for Chrome"
    echo.
    pause
    exit /b 1
)

:: ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if not exist "index.html" (
    echo  ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå index.html
    echo  üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå Demo
    pause
    exit /b 1
)

:: ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô web server
echo  üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Clinic Management Demo...
echo  üåê URL: http://localhost:8000
echo.
echo  üìù ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:
echo     - ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î browser ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÉ‡∏ô 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
echo     - ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏ó‡∏µ‡πà http://localhost:8000 ‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á
echo     - ‡∏Å‡∏î Ctrl+C ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏¢‡∏∏‡∏î server
echo.

:: ‡πÄ‡∏õ‡∏¥‡∏î browser ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
timeout /t 3 /nobreak >nul 2>&1
start http://localhost:8000

:: ‡∏£‡∏±‡∏ô server
npx serve -s . -p 8000

pause`;

fs.writeFileSync(path.join(demoPath, 'start-demo.bat'), startBatContent, 'utf8');
console.log('üñ•Ô∏è Created start-demo.bat for Windows');

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå start-demo.sh ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Mac/Linux
const startShContent = `#!/bin/bash

echo "üè• Clinic Management System - Demo"
echo "=================================="
echo ""
echo "üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö..."
echo ""

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Node.js
if ! command -v node &> /dev/null; then
    echo "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Node.js ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö"
    echo "üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Node.js ‡∏à‡∏≤‡∏Å https://nodejs.org"
    echo ""
    echo "üìå ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏ò‡∏µ‡∏á‡πà‡∏≤‡∏¢:"
    echo "   python3 -m http.server 8000"
    echo "   ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡∏¥‡∏î browser ‡πÑ‡∏õ‡∏ó‡∏µ‡πà http://localhost:8000"
    exit 1
fi

# ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if [ ! -f "index.html" ]; then
    echo "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå index.html"
    echo "üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå Demo"
    exit 1
fi

echo "üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Clinic Management Demo..."
echo "üåê URL: http://localhost:8000"
echo ""
echo "üìù ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:"
echo "   - ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î browser ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÉ‡∏ô 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ"
echo "   - ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏ó‡∏µ‡πà http://localhost:8000 ‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á"
echo "   - ‡∏Å‡∏î Ctrl+C ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏¢‡∏∏‡∏î server"
echo ""

# ‡πÄ‡∏õ‡∏¥‡∏î browser ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (Mac)
sleep 3
if command -v open &> /dev/null; then
    open http://localhost:8000
elif command -v xdg-open &> /dev/null; then
    xdg-open http://localhost:8000
fi

# ‡∏£‡∏±‡∏ô server
npx serve -s . -p 8000`;

fs.writeFileSync(path.join(demoPath, 'start-demo.sh'), startShContent, 'utf8');
fs.chmodSync(path.join(demoPath, 'start-demo.sh'), '755');
console.log('üçé Created start-demo.sh for Mac/Linux');

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå README ‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÅ‡∏•‡πâ‡∏ß
const readmeContent = `üè• Clinic Management System - Demo Version
==========================================

üöÄ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥):

‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Windows:
1. ‡∏î‡∏±‡∏ö‡πÄ‡∏ö‡∏¥‡∏•‡∏Ñ‡∏•‡∏¥‡∏Å‡πÑ‡∏ü‡∏•‡πå "start-demo.bat"
2. ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
3. Browser ‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÑ‡∏õ‡∏ó‡∏µ‡πà http://localhost:8000

‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Mac/Linux:
1. ‡πÄ‡∏õ‡∏¥‡∏î Terminal ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ
2. ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: ./start-demo.sh
3. Browser ‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÑ‡∏õ‡∏ó‡∏µ‡πà http://localhost:8000

üìå ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ Node.js):

1. ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Extension "Web Server for Chrome"
2. ‡πÄ‡∏õ‡∏¥‡∏î Extension ‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ
3. ‡πÄ‡∏õ‡∏¥‡∏î URL ‡∏ó‡∏µ‡πà Extension ‡πÅ‡∏™‡∏î‡∏á

‡∏´‡∏£‡∏∑‡∏≠:
1. ‡πÉ‡∏ä‡πâ Python: python3 -m http.server 8000
2. ‡πÄ‡∏õ‡∏¥‡∏î browser ‡πÑ‡∏õ‡∏ó‡∏µ‡πà http://localhost:8000

‚ú® Features ‡∏ó‡∏µ‡πà‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ:
- ‡∏´‡∏ô‡πâ‡∏≤ Dashboard
- ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏•‡∏∞‡∏ô‡∏≥‡∏ó‡∏≤‡∏á  
- ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ (‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•)
- UI/UX ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
- Responsive Design

‚ö†Ô∏è ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:
- ‡∏´‡πâ‡∏≤‡∏°‡∏î‡∏±‡∏ö‡πÄ‡∏ö‡∏¥‡∏•‡∏Ñ‡∏•‡∏¥‡∏Å index.html ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á (‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î CORS Error)
- ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ Web Server ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
- ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á (‡∏£‡∏≠ Database)
- ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö UI/UX

üìû ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°:
Email: [‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì]
Tel: [‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì]
Line: [Line ID ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì]

‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠: ${new Date().toLocaleString('th-TH')}
`;

fs.writeFileSync(path.join(demoPath, 'README.txt'), readmeContent, 'utf8');
console.log('üìù Created updated README.txt');

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå package.json ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö demo (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
const demoPkgJson = {
    "name": "clinic-demo",
    "version": "1.0.0",
    "description": "Clinic Management System Demo",
    "scripts": {
        "start": "npx serve -s . -p 8000"
    }
};

fs.writeFileSync(
    path.join(demoPath, 'package.json'),
    JSON.stringify(demoPkgJson, null, 2),
    'utf8'
);
console.log('üì¶ Created package.json for demo');

console.log('\n‚úÖ Demo package created successfully!');
console.log(`üìÅ Location: ${demoFolderName}`);
console.log('üéØ Instructions for client:');
console.log('   Windows: ‡∏î‡∏±‡∏ö‡πÄ‡∏ö‡∏¥‡∏•‡∏Ñ‡∏•‡∏¥‡∏Å start-demo.bat');
console.log('   Mac/Linux: ‡∏£‡∏±‡∏ô ./start-demo.sh');
console.log('üìß Ready to send to client! üéâ');